name: Build test

on:
  # Trigger the workflow on push or pull requests.
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        include:
          # x86-64 gcc
          - arch: x86_64
            cc_pkg: gcc-x86-64-linux-gnu
            cxx_pkg: g++-x86-64-linux-gnu
            cc: x86_64-linux-gnu-gcc
            cxx: x86_64-linux-gnu-g++

          # x86-64 clang
          - arch: x86_64
            cc_pkg: clang
            cxx_pkg: clang
            cc: clang
            cxx: clang++

    env:
      FLAGS: -g -O3 -Wall -Wextra -Werror

    steps:
    - name: Checkout source
      uses: actions/checkout@v2
      with:
            submodules: 'true'

    - name: Install Compilers
      run: |
        if [[ "${{matrix.cc_pkg}}" == "clang" ]]; then \
            wget https://apt.llvm.org/llvm.sh -O /tmp/llvm.sh; \
            sudo bash /tmp/llvm.sh 15; \
            sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-15 400; \
            sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-15 400; \
        else \
            sudo apt-get update -y; \
            sudo apt-get install -y ${{matrix.cc_pkg}} ${{matrix.cxx_pkg}}; \
        fi;

    - name: Install Boost
      run: |
            sudo apt-get install -y libboost-all-dev

    - name: Display compiler and kernel versions
      run: |
        ${{matrix.cc}} --version;
        ${{matrix.cxx}} --version;
        echo kernel
        cat /proc/version
        ip addr

    - name: Build liburing
      run: |
        cd liburing
        ./configure --cc=${{matrix.cc}} --cxx=${{matrix.cxx}};
        make -j$(nproc) V=1 CPPFLAGS="-Werror" CFLAGS="$FLAGS" CXXFLAGS="$FLAGS";

    - name: Build
      run: make -j$(nproc) V=1 SUBMODULE_LIBURING=1 CXXFLAGS_EXTRA="-Werror";

    - name: Test
      run: make -j$(nproc) V=1 SUBMODULE_LIBURING=1 CXXFLAGS_EXTRA="-Werror" check;
